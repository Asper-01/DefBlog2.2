<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title text-center">Créer un compte</h5>

          <!-- Formulaire d'inscription -->
          <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
            <%= f.error_notification %> <!-- Affiche les erreurs de validation -->

            <div class="form-inputs">
              <div class="form-group">
                
                <%= f.input :email,
                            required: true,
                            autofocus: true,
                            input_html: { id: "email-field", autocomplete: "email", class: "form-control", type: "email", pattern: ".+@.+\\..+" },
                            label_html: { class: "form-label" } %>
                <span id="email-error-icon" class="error-icon"></span>
                <div id="email-error-message" class="error-message"></div>
              </div>

              <%= f.input :name,
                          required: true,
                          input_html: { autocomplete: "name", class: "form-control" },
                          label_html: { class: "form-label" } %>

              <%= f.input :password,
                          required: true,
                          hint: ("#{@minimum_password_length} caractères minimum" if @minimum_password_length),
                          input_html: { autocomplete: "new-password", class: "form-control" },
                          label_html: { class: "form-label" } %>

              <%= f.input :password_confirmation,
                          required: true,
                          input_html: { autocomplete: "new-password", class: "form-control" },
                          label_html: { class: "form-label" } %>
            </div>

            <div class="form-actions mt-3">
              <%= f.button :submit, "Créer un compte", class: "btn btn-primary w-100" %>
            </div>
          <% end %>

          <!-- Liens supplémentaires -->
          <div class="mt-3 text-center">
            <%= render "devise/shared/links" %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="module">
document.addEventListener('DOMContentLoaded', () => {
  const emailField = document.getElementById('email-field');
  const emailErrorIcon = document.getElementById('email-error-icon');
  const emailErrorMessage = document.getElementById('email-error-message');
  const passwordField = document.getElementById('password-field');
  const passwordErrorMessage = document.getElementById('password-error-message');

  // Vérification email
  if (emailField) {
    emailField.addEventListener('blur', () => {
      const email = emailField.value;

      if (email) {
        fetch(`/users/check_uniqueness?field=email&value=${email}`)
          .then(response => response.json())
          .then(data => {
            if (data.exists) {
              emailErrorMessage.textContent = "Email est déjà utilisé";
              emailField.classList.add('error');
              emailErrorIcon.style.display = 'inline';
            } else {
              emailErrorMessage.textContent = '';
              emailField.classList.remove('error');
              emailErrorIcon.style.display = 'none';
            }
          })
          .catch(err => {
            console.error('Erreur lors de la vérification de l\'email:', err);
          });
      }
    });

    emailField.addEventListener('input', () => {
      const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
      const emailValue = emailField.value;

      if (!emailRegex.test(emailValue)) {
        emailErrorMessage.textContent = "Email invalide, veuillez réessayer.";
        emailField.classList.add('error');
        emailErrorIcon.style.display = 'inline';
      } else {
        emailErrorMessage.textContent = '';
        emailField.classList.remove('error');
        emailErrorIcon.style.display = 'none';
      }
    });
  }

  // Validation mot de passe
  if (passwordField) {
    passwordField.addEventListener('input', () => {
      const password = passwordField.value;
      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,}$/; // Minimum 8 caractères, 1 lettre, 1 chiffre, 1 caractère spécial

      if (!passwordRegex.test(password)) {
        passwordErrorMessage.textContent = "Le mot de passe doit comporter au moins 8 caractères, une lettre, un chiffre et un caractère spécial.";
        passwordField.classList.add('error');
      } else {
        passwordErrorMessage.textContent = '';
        passwordField.classList.remove('error');
      }
    });
  }
});

</script>

<style>
.error-icon {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 18px;
  color: red;
  display: none;
}

.error-message {
  color: red;
  font-size: 12px;
  margin-top: 5px;
}

.form-group {
  position: relative;
}
</style>
